name: test

on:
  workflow_dispatch:
  pull_request:
    types: [ opened, synchronize ]
  push:
    branches:
      - main

env:
  FLUTTER_VERSION: '3.10.2'

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout
        uses: actions/checkout@v1
        
      - name: Retrieve the secret and decode it to a file
        env:
          APP_ENV: ${{ secrets.APP_ENV }}
          ACCONT_BASE64: ${{ secrets.DEV_ENV }}
          ATTRACTION_BASE64: ${{ secrets.PROD_ENV }}
        run: |
          if [ -z "$APP_ENV" ]; then
            echo "Error: APP_ENV is empty"
            exit 1
          fi
          if [ -z "$ACCONT_BASE64" ]; then
            echo "Error: ACCONT_BASE64 is empty"
            exit 1
          fi
          if [ -z "$ATTRACTION_BASE64" ]; then
            echo "Error: ATTRACTION_BASE64 is empty"
            exit 1
          fi

          echo $APP_ENV | base64 --decode > .env || { echo "Error decoding APP_ENV"; exit 1; }
          echo $ACCONT_BASE64 | base64 --decode > .env.dev || { echo "Error decoding ACCONT_BASE64"; exit 1; }
          echo $ATTRACTION_BASE64 | base64 --decode > .env.prod || { echo "Error decoding ATTRACTION_BASE64"; exit 1; }

      # - name: Retrieve the secret and decode it to a file
      #   env:
      #     APP_ENV: ${{ secrets.APP_ENV }}
      #     ACCONT_BASE64: ${{ secrets.DEV_ENV }}
      #     ATTRACTION_BASE64: ${{ secrets.PROD_ENV }}

      #   run: |
      #     echo $APP_ENV | base64 --decode > .env
      #     echo $DEV_ENV_BASE64 | base64 --decode > .env.dev
      #     echo $PROD_ENV_BASE64 | base64 --decode > .env.prod


      - name: fvm
        uses: kuhnroyal/flutter-fvm-config-action@v1
        id: fvm-config-action

      - name: install flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ steps.fvm-config-action.outputs.FLUTTER_VERSION }}
          channel: ${{ steps.fvm-config-action.outputs.FLUTTER_CHANNEL }}

      - name: Install dependencies
        run: |
          flutter pub get

      - name: build runner
        run: |
          flutter pub run build_runner build --delete-conflicting-outputs

      - name: Test
        run: |
          flutter test